/**
 * Generate by lmt-code-generator ${date}
 * you can find lmt-code-generator project on github, please visit:
 *
 */
package ${tableBean.basicMapperPackage};

import com.lmt.parent.basic.mapper.BasicMapper;
#if(${tableBean.pkColumnBean.importClass})
import ${tableBean.pkColumnBean.importClass};
#end
import ${tableBean.entityClassFullName};
import org.apache.ibatis.annotations.Param;

import java.util.List;

/**
 *
 * @description ${tableBean.entityClassName}基础Mapper接口
 * @author Generate by lmt-code-generator
 * @date ${date}
 * @since JDK 1.8
 *
 */
public interface ${tableBean.basicMapperClassName} extends BasicMapper<${tableBean.entityClassName}, ${tableBean.pkColumnBean.javaType}>{

    /**
     * @description 插入${tableBean.entityClassNameFirstLower}到数据表
     * @param ${tableBean.entityClassNameFirstLower}
     * @return int
     */
    @Override
    public int insert(@Param(value = "${tableBean.entityClassNameFirstLower}") $tableBean.entityClassName $tableBean.entityClassNameFirstLower);

    /**
     * @description 批量插入${tableBean.entityClassNameFirstLower}到数据表
     * @param ${tableBean.entityClassNameFirstLower}List
     * @return int
     */
    @Override
    public int batchInsert(List<${tableBean.entityClassName}> ${tableBean.entityClassNameFirstLower}List);

    /**
     * @description 根据主键id查寻${tableBean.entityClassName}实体
     * @param ${tableBean.pkColumnBean.javaName}
     *
     * @return ${tableBean.entityClassName}
     */
    @Override
    public ${tableBean.entityClassName} get(${tableBean.pkColumnBean.javaType} ${tableBean.pkColumnBean.javaName});

    /**
     * @description 根据主键id列表查寻${tableBean.entityClassName}实体列表
     * @param ${tableBean.pkColumnBean.javaName}List
     * @return List<${tableBean.entityClassName}>
     */
    @Override
    public List<${tableBean.entityClassName}> listByPKList(List<${tableBean.pkColumnBean.javaType}> ${tableBean.pkColumnBean.javaName}List);

    /**
     * @description 根据主键id删除记录
     * @param ${tableBean.pkColumnBean.javaName} (非空)
     * @return int
     */
    @Override
    public int deleteByPk(${tableBean.pkColumnBean.javaType} ${tableBean.pkColumnBean.javaName});

    /**
     * @description 根据实体删除记录
     * @param ${tableBean.entityClassNameFirstLower} 不能所有字段都为空，否则sql执行出错
     * @return int
     */
    @Override
    public int delete(@Param(value = "${tableBean.entityClassNameFirstLower}") ${tableBean.entityClassName} ${tableBean.entityClassNameFirstLower});

    /**
     * @description 根据主键列表删除记录
     * @param ${tableBean.pkColumnBean.javaName}List
     * @return int 删除成功的记录数
     */
    @Override
    public int deleteByPKList(List<${tableBean.pkColumnBean.javaType}> ${tableBean.pkColumnBean.javaName}List);

    /**
     * @description 根据主键id更新记录
     * @param ${tableBean.entityClassNameFirstLower}    主键id字段不能为空
     * @return int
     */
    @Override
    public int update(@Param(value = "${tableBean.entityClassNameFirstLower}") ${tableBean.entityClassName} ${tableBean.entityClassNameFirstLower});


    /**
     * @description 根据主实体统计记录数
     * @param ${tableBean.entityClassNameFirstLower}
     * @return int
     */
    @Override
    public long count(@Param(value = "${tableBean.entityClassNameFirstLower}") ${tableBean.entityClassName} ${tableBean.entityClassNameFirstLower});

    /**
     * @description 根据主实体查询记录
     * @param ${tableBean.entityClassNameFirstLower}
     * @return int
     */
    @Override
    public List<${tableBean.entityClassName}> query(@Param(value = "${tableBean.entityClassNameFirstLower}") ${tableBean.entityClassName} ${tableBean.entityClassNameFirstLower});

    /**
     * @description 根据主实体查询记录，根据指定的字段进行排序
     * @param ${tableBean.entityClassNameFirstLower}
     * @param sortField 排序字段
     * @param sortOrder asc或desc
     * @return List<${tableBean.entityClassName}>
     */
    @Override
    public List<$tableBean.entityClassName> queryOrderBy(
                    @Param(value = "${tableBean.entityClassNameFirstLower}") ${tableBean.entityClassName} ${tableBean.entityClassNameFirstLower},
                    @Param(value = "sortField") String sortField,
                    @Param(value = "sortOrder") String sortOrder);

}
